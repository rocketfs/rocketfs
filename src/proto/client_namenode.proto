syntax = "proto3";

package rocketfs;

message PingRequest {
  string ping = 1;
}
message PongResponse {
  string pong = 2;
}

// https://pubs.opengroup.org/onlinepubs/7908799/xsh/sysstat.h.html
message Stat {
  uint64 id = 1;
  uint64 mode = 2;
  int32 nlink = 3;
  uint64 uid = 4;
  uint64 gid = 5;
  int64 size = 6;
  int64 atime_in_ns = 7;
  int64 mtime_in_ns = 8;
  int64 ctime_in_ns = 9;
  int64 block_size = 10;
  int64 block_num = 11;
}
message GetInodeRequest {
  optional string path = 1;
  optional uint64 id = 2;
}
message GetInodeResponse {
  int32 error_code = 1;
  string error_msg = 2;
  int64 id = 3;
  Stat stat = 4;
}

message LookupRequest {
  uint64 parent_id = 1;
  string name = 2;
  uint32 uid = 3;
  uint32 gid = 4;
}
message LookupResponse {
  int32 error_code = 1;
  string error_msg = 2;
  int64 id = 3;
  Stat stat = 4;
}

message ListDirRequest {
  uint64 id = 1;
  string start_after = 2;
  int32 limit = 3;
  uint32 uid = 4;
  uint32 gid = 5;
}
message ListDirResponse {
  message DEnt {
    uint64 id = 1;
    string name = 2;
    uint32 type = 3;
  }
  int32 error_code = 1;
  string error_msg = 2;
  DEnt self_dent = 3;
  optional DEnt parent_dent = 4;
  repeated DEnt ents = 5;
  bool has_more = 6;
}

message CreateRequest {
  uint64 parent_id = 1;
  string name = 2;
  uint64 mode = 3;
  uint32 uid = 4;
  uint32 gid = 5;
}
message CreateResponse {
  int32 error_code = 1;
  string error_msg = 2;
  uint64 id = 3;
  Stat stat = 4;
}

message MkdirsRequest {
  uint64 parent_id = 1;
  string name = 2;
  uint64 mode = 3;
  uint32 uid = 4;
  uint32 gid = 5;
}
message MkdirsResponse {
  int32 error_code = 1;
  string error_msg = 2;
  uint64 id = 3;
  Stat stat = 4;
}

// https://github.com/apache/hadoop/blob/266dad1617d599f7d247b54d03b4741f85cd6460/hadoop-hdfs-project/hadoop-hdfs-client/src/main/proto/ClientNamenodeProtocol.proto#
service ClientNamenodeService {
  rpc PingPong(PingRequest) returns (PongResponse);

  rpc GetInode(GetInodeRequest) returns (GetInodeResponse);
  rpc Lookup(LookupRequest) returns (LookupResponse);
  rpc ListDir(ListDirRequest) returns (ListDirResponse);
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Mkdirs(MkdirsRequest) returns (MkdirsResponse);
}